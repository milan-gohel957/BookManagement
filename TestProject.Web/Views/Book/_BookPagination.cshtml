@model PaginationViewModel<BookModel>
<style>
    #pageSize {
        max-width: 200px;
        width: 90vw;
    }
</style>
<table class="table">
    <thead>
        <tr>
            <th scope="col" id="id" onclick="handleOrderBy(this.id)">Id
                @if(Model.Order == "id"){
                    @if(Model.IsAscending){
                        <i class="bi bi-arrow-up"></i>
                    }
                    else{
                        <i class="bi bi-arrow-down"></i>
                    }
                }
            </th>
            <th scope="col" id="image">Book Image</th>
            <th scope="col" id="title" onclick="handleOrderBy(this.id)">Book Name
                @if(Model.Order == "title"){
                    @if(Model.IsAscending){
                        <i class="bi bi-arrow-up"></i>
                    }
                    else{
                        <i class="bi bi-arrow-down"></i>
                    }
                }
            </th>
            <th scope="col" id="authorName" onclick="handleOrderBy(this.id)">Author
                @if(Model.Order == "authorName"){
                    @if(Model.IsAscending){
                        <i class="bi bi-arrow-up"></i>
                    }
                    else{
                        <i class="bi bi-arrow-down"></i>
                    }
                }
            </th>
            <th scope="col" id="isbn" onclick="handleOrderBy(this.id)">ISBN
                @if(Model.Order == "isbn"){
                    @if(Model.IsAscending){
                        <i class="bi bi-arrow-up"></i>
                    }
                    else{
                        <i class="bi bi-arrow-down"></i>
                    }
                }
            </th>
            <th scope="col" id="publishYear" onclick="handleOrderBy(this.id)">
                @if(Model.Order == "publishYear"){
                    @if(Model.IsAscending){
                        <i class="bi bi-arrow-up"></i>
                    }
                    else{
                        <i class="bi bi-arrow-down"></i>
                    }
                }
                Publish Year</th>
            <th scope="col" id="bookStatus">Status</th>
            <th scope="col" id="bookStatus">Issue</th>

            @if (User.IsInRole("Admin"))
            {
                <th scope="col" id="actions">Action</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var Book in Model.Items)
        {
            <tr>
                <th scope="row">@Book.Id</th>
                <td>
                    <img src="@Book.BookImageUrl" alt="book image" height="100" width="100">
                </td>
                <td>
                    @Book.Title
                </td>
                <td>@Book.AuthorName</td>
                <td>@Book.ISBN</td>
                <td>@Book.PublishedYear</td>
                <td>
                    @if (Book.BookStatus == BookStatusEnum.Available)
                    {
                        <span class="bg-success rounded-3 px-2 py-1 text-white">Available</span>

                    }
                    else if (Book.BookStatus == BookStatusEnum.Issued)
                    {

                        <span class="bg-secondary rounded-3 px-2 py-1 text-white">Issued</span>
                    }
                </td>
                <td>
                    @if (Book.BookStatus == BookStatusEnum.Available)
                    {
                        <button class="btn btn-primary" onclick="issueBookAsync(@Book.Id)">Issue</button>
                    }
                    else if (Model.IssuedBookIds.Any(ib => ib == Book.Id))
                    {
                        <button class="btn btn-secondary" onclick="returnBookAsync(@Book.Id)">Return</button>
                    }
                    else
                    {
                        <button class="btn btn-primary" disabled>Issue</button>
                    }
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <div class="d-flex flex-row">
                            <i class="bi bi-pen cursor-pointer me-3" onclick="getUpdateBookModal(@Book.Id)"></i>
                            <i class="bi bi-trash cursor-pointer" onclick="getDeleteModal(@Book.Id)"></i>
                        </div>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<div class="d-flex flex-row gap-2 justify-content-end">
    <select name="pageSize" class="form-select" id="pageSize" onchange="changePageSize()">
        <option value="5">5</option>
        <option value="10">10</option>
        <option value="25">25</option>
    </select>
    <button class="btn btn-primary" onclick="loadPreviousPage()" @(Model.Page == 1 ? "disabled" : "")>&lt;</button>
    <button class="btn btn-primary" onclick="loadNextPage()" @(Model.Page == Model.TotalPages ? "disabled" : "")>
        &gt;</button>
</div>

<script>
    function getDeleteModal(bookId) {
        $.get("/Book/ShowDeleteModal", function (data, status) {
            deleteBookId = bookId;
            if (status === "success") {
                $("#modalContainer").html(data);
                $("#deleteModal").modal("show");
            }
            else {
                console.error("Errror while fetching Delete Modal")
            }
        })
    }

    function returnBookAsync(bookId) {
        $.ajax({
            url: "/Book/ReturnBook",
            type: 'POST',
            data: { bookId, userId },
            success: function (data) {
                console.log(data.result);
                if (data.result.status) {
                    toastr.success(data.result.message);
                    updateBookPagination();
                }
                else {
                    toastr.error(data.result.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Ajax error:", error);
                toastr.error("An error occurred while processing your request.");
            }
        })
    }

    function issueBookAsync(bookId) {
        $.ajax({
            url: "/Book/IssueBook",
            type: 'POST',
            data: { bookId, userId },
            success: function (data) {
                console.log(data.result);
                if (data.result.status) {
                    toastr.success(data.result.message);
                    updateBookPagination();
                }
                else {
                    toastr.error(data.result.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Ajax error:", error);
                toastr.error("An error occurred while processing your request.");
            }
        })
    }
</script>