// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProject.Entity.Data;

#nullable disable

namespace TestProject.Entity.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250515120649_ChangeDefaultIsissued")]
    partial class ChangeDefaultIsissued
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookUser", b =>
                {
                    b.Property<int>("IssuedBooksId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersIssuedId")
                        .HasColumnType("integer");

                    b.HasKey("IssuedBooksId", "UsersIssuedId");

                    b.HasIndex("UsersIssuedId");

                    b.ToTable("BookUser");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("BookImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("BookStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Chinua Achebe",
                            BookImageUrl = "https://images.unsplash.com/photo-1543002588-bfa74002ed7e?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 342, DateTimeKind.Local).AddTicks(4345),
                            ISBN = "7624133121",
                            IsDeleted = false,
                            PublishedYear = 1958,
                            Title = "Things Fall Apart",
                            TotalPages = 209,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 342, DateTimeKind.Local).AddTicks(4347)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Hans Christian Andersen",
                            BookImageUrl = "https://images.unsplash.com/photo-1544947950-fa07a98d237f?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 342, DateTimeKind.Local).AddTicks(4350),
                            ISBN = "9153676823",
                            IsDeleted = false,
                            PublishedYear = 1836,
                            Title = "Fairy tales",
                            TotalPages = 784,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 342, DateTimeKind.Local).AddTicks(4351)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIssued")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("IssuedBook");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsIssued = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 509, DateTimeKind.Local).AddTicks(1906),
                            Email = "user1@email.com",
                            IsDeleted = false,
                            Password = "LWEPjvu8H8u0KOIeumUnJg==:drm/eUIEMVYTGUmnSwcHExzjOYMCnlN6130jWdDrHnw=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 509, DateTimeKind.Local).AddTicks(1921)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 586, DateTimeKind.Local).AddTicks(1079),
                            Email = "user2@email.com",
                            IsDeleted = false,
                            Password = "QDeIU/OV1wuvFsw9F69FqQ==:NDaAMCdFqEhlOpXx02nFA6qC+Z9s5lu3IqFyXxHVwGg=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 586, DateTimeKind.Local).AddTicks(1102)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 662, DateTimeKind.Local).AddTicks(3880),
                            Email = "user3@email.com",
                            IsDeleted = false,
                            Password = "xmyHkTRpQq3DzUn1KgLN7A==:nmlaEZZ1/UTcomluLFR/yoNS+HXxJdD/IUf8Lg2Vvbg=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 662, DateTimeKind.Local).AddTicks(3886)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 737, DateTimeKind.Local).AddTicks(2246),
                            Email = "user4@email.com",
                            IsDeleted = false,
                            Password = "XdbASLNOZqHvNUQ2MXZjbA==:VTVUzxm63CT6cFK1DCRnbyBjAcEVO3x9dDbmWHUJsD8=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 737, DateTimeKind.Local).AddTicks(2251)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 813, DateTimeKind.Local).AddTicks(5722),
                            Email = "user5@email.com",
                            IsDeleted = false,
                            Password = "pZBpWCL/CczS3HtSbSa3hQ==:VW/+q8Qd8xBpYADKFFIk7WO7hRbNT45PXX/0MxXGgDQ=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 813, DateTimeKind.Local).AddTicks(5750)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 890, DateTimeKind.Local).AddTicks(1079),
                            Email = "user6@email.com",
                            IsDeleted = false,
                            Password = "4jknTy5f0nuF8DAY/Bo6EA==:s0/NThlsnlKXZfE1uEzDaZMBDZWicvYX+odSyXAZ188=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 890, DateTimeKind.Local).AddTicks(1095)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 967, DateTimeKind.Local).AddTicks(1507),
                            Email = "user7@email.com",
                            IsDeleted = false,
                            Password = "sY5lHz/a6Au56BzWasu5NA==:X6i3+uDtwCLYAV7r8+x/1IOQCz4IG535gs53yRH5MdQ=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 48, 967, DateTimeKind.Local).AddTicks(1514)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 43, DateTimeKind.Local).AddTicks(5862),
                            Email = "user8@email.com",
                            IsDeleted = false,
                            Password = "UhqueVTBexswhcKaxzM8TQ==:NKBCHItXH4aS+VClozL5/Q14v9+i8yNRokrP2qo942M=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 43, DateTimeKind.Local).AddTicks(5867)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 118, DateTimeKind.Local).AddTicks(3830),
                            Email = "user9@email.com",
                            IsDeleted = false,
                            Password = "G272ledhVN6/ueXu6SP6/A==:zg1VMjXugBim/Eb/HlRHK5V3G+iZJSBvOYHBMFEXiUw=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 118, DateTimeKind.Local).AddTicks(3832)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 193, DateTimeKind.Local).AddTicks(945),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "p0IRKES+OzorlZH0pIVQnw==:ZgieBEykhE3Z0zAxznqdDqQOEkUTl7KS2Z2oniYRQpg=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 193, DateTimeKind.Local).AddTicks(947)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 267, DateTimeKind.Local).AddTicks(4017),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "/9atWHcv7M9IbmYdYDs0Sg==:3uqdHlogs0pkqyF8ZmnLfR7G65hOxvMKsjAVnqHotks=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 267, DateTimeKind.Local).AddTicks(4023)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 342, DateTimeKind.Local).AddTicks(3441),
                            Email = "admin1@email.com",
                            IsDeleted = false,
                            Password = "VpCuHrXtJ8TIqJEhW2q0GA==:DnQbsibT8bfXCaky5ronHpNPVimaSrJxR3u4YvfnBLo=",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 5, 15, 17, 36, 49, 342, DateTimeKind.Local).AddTicks(3448)
                        });
                });

            modelBuilder.Entity("BookUser", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("IssuedBooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersIssuedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
