// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProject.Entity.Data;

#nullable disable

namespace TestProject.Entity.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250515051856_IssuedBookNameChange")]
    partial class IssuedBookNameChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestProject.Entity.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("BookImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("BookStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Chinua Achebe",
                            BookImageUrl = "https://unsplash.com/photos/9DaOYUYnOls",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 607, DateTimeKind.Local).AddTicks(4065),
                            ISBN = "7624133121",
                            IsDeleted = false,
                            PublishedYear = 1958,
                            Title = "Things Fall Apart",
                            TotalPages = 209,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 607, DateTimeKind.Local).AddTicks(4066)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Hans Christian Andersen",
                            BookImageUrl = "https://unsplash.com/photos/CXYPfveiuis",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 607, DateTimeKind.Local).AddTicks(4069),
                            ISBN = "9153676823",
                            IsDeleted = false,
                            PublishedYear = 1836,
                            Title = "Fairy tales",
                            TotalPages = 784,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 607, DateTimeKind.Local).AddTicks(4070)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIssued")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("IssuedBook");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsIssued = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 743, DateTimeKind.Local).AddTicks(6195),
                            Email = "user1@email.com",
                            IsDeleted = false,
                            Password = "JvHv48waEmCI2AioWmn4bA==:NVIMc+FFr8ZOgoQHVzH+7ixy7XOtRCDOXjAiIJGx0ec=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 743, DateTimeKind.Local).AddTicks(6211)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 818, DateTimeKind.Local).AddTicks(574),
                            Email = "user2@email.com",
                            IsDeleted = false,
                            Password = "k/5ugvtwJoBtVFB9+ClTQg==:RzEmVRH2/VlDDh3vEsT9IpRhrc/rbbkAKWSmAtp/e/s=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 818, DateTimeKind.Local).AddTicks(576)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 895, DateTimeKind.Local).AddTicks(336),
                            Email = "user3@email.com",
                            IsDeleted = false,
                            Password = "MegY/IMEpXMgKCT4SjmzgA==:6/p1aEhWfNcJzwNMeANAutVe+FbwJ+2DiZzIbWeS4ME=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 895, DateTimeKind.Local).AddTicks(355)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 971, DateTimeKind.Local).AddTicks(4577),
                            Email = "user4@email.com",
                            IsDeleted = false,
                            Password = "KcUmbY8A1KNTBC5OVvasEg==:/YKBnVGyQHld7ITST57yZjittfOIxuO6hkuIFsgZ5iU=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 55, 971, DateTimeKind.Local).AddTicks(4583)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 47, DateTimeKind.Local).AddTicks(8768),
                            Email = "user5@email.com",
                            IsDeleted = false,
                            Password = "OTiYbtLMps7m65A/1GmMfg==:m2IAdm0G4XkC+qb6bG3jdsf5Bw0FWJkgRHvLjLot5ss=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 47, DateTimeKind.Local).AddTicks(8796)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 123, DateTimeKind.Local).AddTicks(4837),
                            Email = "user6@email.com",
                            IsDeleted = false,
                            Password = "X1TmcDNMycJQFCaE5FS8oQ==:ST02WEv+jUB3sLZsfE8NJCSKgLiBWWi0DnSSixRPB2E=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 123, DateTimeKind.Local).AddTicks(4853)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 211, DateTimeKind.Local).AddTicks(6290),
                            Email = "user7@email.com",
                            IsDeleted = false,
                            Password = "Aghhia6ICko6WvO2k0TP7A==:fl/ZIb0UkQVaPo/5JRkAxrQkyCHBg15Ar9wYMTpY9Sw=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 211, DateTimeKind.Local).AddTicks(6303)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 296, DateTimeKind.Local).AddTicks(2617),
                            Email = "user8@email.com",
                            IsDeleted = false,
                            Password = "VlmPJdeLoUuhsu58VpQrmQ==:9Q8on0q6SpSdNTYZf8kzHpB4v/+v58E9+j5IYymv4i4=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 296, DateTimeKind.Local).AddTicks(2622)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 376, DateTimeKind.Local).AddTicks(2750),
                            Email = "user9@email.com",
                            IsDeleted = false,
                            Password = "oszIgfh22KCFvGXw14LO+Q==:fyiTmbI0Nd7k9qRQXOsmbcJ/v3mXGOStQ7eVDyqS7ng=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 376, DateTimeKind.Local).AddTicks(2754)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 456, DateTimeKind.Local).AddTicks(7652),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "6hIcoO9hSg5dV81ZNOzj8g==:bwLnsDHJXPPC1ajzTi1WWg4OAN+QL+2j9EzM+JWGiJ8=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 456, DateTimeKind.Local).AddTicks(7657)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 532, DateTimeKind.Local).AddTicks(8654),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "b1x31SVP27oEkyCEa4bcCg==:3zuRRbPdsgJOqmjzQhtKK+23/rxovVzs+ncQRqd6FdA=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 532, DateTimeKind.Local).AddTicks(8660)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 607, DateTimeKind.Local).AddTicks(3108),
                            Email = "admin1@email.com",
                            IsDeleted = false,
                            Password = "qC+WRyW+XPVaO0TNAZlR3A==:/n5yrxZoGwVUvgUWJTmQZ5YP2CI3fIF2Iv5eFmcHlzY=",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 48, 56, 607, DateTimeKind.Local).AddTicks(3110)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
