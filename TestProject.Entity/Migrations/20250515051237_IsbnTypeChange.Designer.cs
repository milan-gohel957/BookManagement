// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProject.Entity.Data;

#nullable disable

namespace TestProject.Entity.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250515051237_IsbnTypeChange")]
    partial class IsbnTypeChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestProject.Entity.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("BookImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("BookStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Chinua Achebe",
                            BookImageUrl = "https://unsplash.com/photos/9DaOYUYnOls",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 867, DateTimeKind.Local).AddTicks(981),
                            ISBN = "7624133121",
                            IsDeleted = false,
                            PublishedYear = 1958,
                            Title = "Things Fall Apart",
                            TotalPages = 209,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 867, DateTimeKind.Local).AddTicks(982)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Hans Christian Andersen",
                            BookImageUrl = "https://unsplash.com/photos/CXYPfveiuis",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 867, DateTimeKind.Local).AddTicks(984),
                            ISBN = "9153676823",
                            IsDeleted = false,
                            PublishedYear = 1836,
                            Title = "Fairy tales",
                            TotalPages = 784,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 867, DateTimeKind.Local).AddTicks(985)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBooks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIssued")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("IssuedBooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsIssued = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 36, DateTimeKind.Local).AddTicks(3806),
                            Email = "user1@email.com",
                            IsDeleted = false,
                            Password = "hcJENWKaOt72FhuIwx895w==:4E96m/k19i03Re88mTzQCep+FWsT7IgBKivBxnZpv/E=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 36, DateTimeKind.Local).AddTicks(3825)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 111, DateTimeKind.Local).AddTicks(5990),
                            Email = "user2@email.com",
                            IsDeleted = false,
                            Password = "dtiKYpDaBJgYK0eUsiq85Q==:s18u3cHTX+sF+qz+vj+gfvYEOiCVkWtPDpFtllpjhzg=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 111, DateTimeKind.Local).AddTicks(5998)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 187, DateTimeKind.Local).AddTicks(9994),
                            Email = "user3@email.com",
                            IsDeleted = false,
                            Password = "tYIgOplqfVcU5OS3i1ql8A==:ibDCALYyfB3pmJKnrHDoP8spSMRtGuAzp5qB8lLAaDk=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 188, DateTimeKind.Local).AddTicks(14)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 263, DateTimeKind.Local).AddTicks(7705),
                            Email = "user4@email.com",
                            IsDeleted = false,
                            Password = "T0CufuQNNdsSF78viectzw==:8hFiTAos4GDq90sriV+R4Pw4hGxdEM6U4ia/JFggLd4=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 263, DateTimeKind.Local).AddTicks(7722)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 339, DateTimeKind.Local).AddTicks(9536),
                            Email = "user5@email.com",
                            IsDeleted = false,
                            Password = "tQRjzOSupjwKGsj6qSivAg==:6tIuhDn6q81Y2LJXB2J1b6baeggF2RHO5PzPgt9Dg/w=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 339, DateTimeKind.Local).AddTicks(9558)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 414, DateTimeKind.Local).AddTicks(6230),
                            Email = "user6@email.com",
                            IsDeleted = false,
                            Password = "hxjWIh67TBw/xwIjnwmCdA==:vlPxNUE5X8bcukVkMZIbND1JFt/VmM7WFAwUnJbg/HM=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 414, DateTimeKind.Local).AddTicks(6238)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 490, DateTimeKind.Local).AddTicks(7418),
                            Email = "user7@email.com",
                            IsDeleted = false,
                            Password = "so/zj96gHUSMvkOhTqsKlg==:NUkMk7fFCY7ivdTL7UQlbjqKU14IWKYQo6OsoZUCz+M=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 490, DateTimeKind.Local).AddTicks(7431)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 567, DateTimeKind.Local).AddTicks(7865),
                            Email = "user8@email.com",
                            IsDeleted = false,
                            Password = "X2iJYTMTD1SY56zfaxIg0A==:FzR+Nr9bVpdyBPqOEPSjT0+/VdUAHsc3kOPb1uTSysQ=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 567, DateTimeKind.Local).AddTicks(7871)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 643, DateTimeKind.Local).AddTicks(4831),
                            Email = "user9@email.com",
                            IsDeleted = false,
                            Password = "q3H2S/sk6nJQQcR+vql48w==:ScDXookvwPwngmkuqhDdnOYNKFDTjLcBXr3unIhZQvs=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 643, DateTimeKind.Local).AddTicks(4833)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 718, DateTimeKind.Local).AddTicks(924),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "b9j3Bk3iLasqpchc/Jrh3Q==:jwrqsXbHXVYl3yRJmAj9ecVXbg2PJZPAQ25h7nQWawg=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 718, DateTimeKind.Local).AddTicks(926)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 792, DateTimeKind.Local).AddTicks(5117),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "w5HyFx+yjtwqO5UkrbMJeg==:oGuXLnDqU6qDyHmke/YMjsmvP8DZ/heIilW/GcMBJZU=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 792, DateTimeKind.Local).AddTicks(5118)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 867, DateTimeKind.Local).AddTicks(38),
                            Email = "admin1@email.com",
                            IsDeleted = false,
                            Password = "FjhbhEWSs04LSq7YJbgJLQ==:clS+ozzqsJwSks6aaelNOfuQCtQ86s5ZVm48UjEr79w=",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 42, 36, 867, DateTimeKind.Local).AddTicks(39)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBooks", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
