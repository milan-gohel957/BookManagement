// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProject.Entity.Data;

#nullable disable

namespace TestProject.Entity.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250515050855_BookDataSeed")]
    partial class BookDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestProject.Entity.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("BookImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("BookStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("ISBN")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Chinua Achebe",
                            BookImageUrl = "https://unsplash.com/photos/9DaOYUYnOls",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 971, DateTimeKind.Local).AddTicks(9505),
                            ISBN = 0,
                            IsDeleted = false,
                            PublishedYear = 1958,
                            Title = "Things Fall Apart",
                            TotalPages = 209,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 971, DateTimeKind.Local).AddTicks(9507)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Hans Christian Andersen",
                            BookImageUrl = "https://unsplash.com/photos/CXYPfveiuis",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 971, DateTimeKind.Local).AddTicks(9509),
                            ISBN = 0,
                            IsDeleted = false,
                            PublishedYear = 1836,
                            Title = "Fairy tales",
                            TotalPages = 784,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 971, DateTimeKind.Local).AddTicks(9510)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBooks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIssued")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("IssuedBooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsIssued = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 105, DateTimeKind.Local).AddTicks(8675),
                            Email = "user1@email.com",
                            IsDeleted = false,
                            Password = "2JZlAqbEyVjFKneoDyvpXQ==:MYCWImMz5WG/0NYJ4z53NfwGC96unQRoodm2RDtsEFk=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 105, DateTimeKind.Local).AddTicks(8689)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 180, DateTimeKind.Local).AddTicks(5078),
                            Email = "user2@email.com",
                            IsDeleted = false,
                            Password = "+RBU4DmhGl6l/HcnNIIYJw==:KtqwesrT3XKWGrQMo4yT2TQKYzRb7UF+ZEDKUgY1rXE=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 180, DateTimeKind.Local).AddTicks(5089)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 256, DateTimeKind.Local).AddTicks(7295),
                            Email = "user3@email.com",
                            IsDeleted = false,
                            Password = "6RSZSQFK6tB6llfMf8pCrg==:sUq+c0gd3HBHKEgwAqlz4xhV+UXnd7ofi3CaxNjDtRE=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 256, DateTimeKind.Local).AddTicks(7318)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 334, DateTimeKind.Local).AddTicks(7653),
                            Email = "user4@email.com",
                            IsDeleted = false,
                            Password = "BhaCsHdKoKI6ooHOIvDipQ==:Xn9yq9HyYyqEy3KBCo4pSut1x/5pef/h+ExEboRMYKc=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 334, DateTimeKind.Local).AddTicks(7667)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 412, DateTimeKind.Local).AddTicks(6117),
                            Email = "user5@email.com",
                            IsDeleted = false,
                            Password = "2TNuHam+3YUgtoA7nZZk7Q==:C2f3Mfb6vfL9JA1JXQ1sMIHQHCgbEIuVH5TGlduZMXE=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 412, DateTimeKind.Local).AddTicks(6132)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 489, DateTimeKind.Local).AddTicks(7931),
                            Email = "user6@email.com",
                            IsDeleted = false,
                            Password = "FAZsE9qwk6Q4qbu8qpeoKg==:PFBccGt3SVsXJTxrmf6OnZja4oE5YvKVcKC3AbSOhLs=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 489, DateTimeKind.Local).AddTicks(7943)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 566, DateTimeKind.Local).AddTicks(4178),
                            Email = "user7@email.com",
                            IsDeleted = false,
                            Password = "RqDHKzmyPoRosfepT0d++A==:QssfS9jNbKelk/OSMar6RJ+c4f90LHXgeOx4Rhqc9Qc=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 566, DateTimeKind.Local).AddTicks(4182)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 655, DateTimeKind.Local).AddTicks(9526),
                            Email = "user8@email.com",
                            IsDeleted = false,
                            Password = "DmU7OQmjKZbx30ZQPN6Hhg==:aHjirvGsjYnpE4mUTvdVhSUwKKDjizzmAazUhrN+F3g=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 655, DateTimeKind.Local).AddTicks(9533)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 742, DateTimeKind.Local).AddTicks(8618),
                            Email = "user9@email.com",
                            IsDeleted = false,
                            Password = "m4/KsgOwx4rWRJiSfu4fGg==:U0i8oktEFOxWU3nmwzKNV42m/s4+KvUBOJPbawHvbQg=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 742, DateTimeKind.Local).AddTicks(8624)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 817, DateTimeKind.Local).AddTicks(7070),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "r6t6byjPGw9RpHbeBngASw==:XqRXzTb3kagYneHdV8yALNm+WdkJCPHuI0WVOCXkZ/A=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 817, DateTimeKind.Local).AddTicks(7074)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 895, DateTimeKind.Local).AddTicks(9341),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "bVU6nAY0KcqL+dFNJeC1YA==:LbjpainoTzhk59jKfGSIQ52yAJOzrYQCIvcfJLAADWY=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 895, DateTimeKind.Local).AddTicks(9350)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 971, DateTimeKind.Local).AddTicks(8546),
                            Email = "admin1@email.com",
                            IsDeleted = false,
                            Password = "pXcF8y2AM9WQhKuM8wrEWA==:hOm2Qk6ZU13XPsoYYbZBQHS/DmxMCPwLcvJpTFasb78=",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 5, 15, 10, 38, 54, 971, DateTimeKind.Local).AddTicks(8549)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBooks", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
