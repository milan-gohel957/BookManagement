// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProject.Entity.Data;

#nullable disable

namespace TestProject.Entity.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250515112924_AddedCollection")]
    partial class AddedCollection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookUser", b =>
                {
                    b.Property<int>("IssuedBooksId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersIssuedId")
                        .HasColumnType("integer");

                    b.HasKey("IssuedBooksId", "UsersIssuedId");

                    b.HasIndex("UsersIssuedId");

                    b.ToTable("BookUser");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("BookImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("BookStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Chinua Achebe",
                            BookImageUrl = "https://images.unsplash.com/photo-1543002588-bfa74002ed7e?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 339, DateTimeKind.Local).AddTicks(5724),
                            ISBN = "7624133121",
                            IsDeleted = false,
                            PublishedYear = 1958,
                            Title = "Things Fall Apart",
                            TotalPages = 209,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 339, DateTimeKind.Local).AddTicks(5725)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Hans Christian Andersen",
                            BookImageUrl = "https://images.unsplash.com/photo-1544947950-fa07a98d237f?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 339, DateTimeKind.Local).AddTicks(5728),
                            ISBN = "9153676823",
                            IsDeleted = false,
                            PublishedYear = 1836,
                            Title = "Fairy tales",
                            TotalPages = 784,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 339, DateTimeKind.Local).AddTicks(5728)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIssued")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("IssuedBook");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsIssued = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 501, DateTimeKind.Local).AddTicks(5735),
                            Email = "user1@email.com",
                            IsDeleted = false,
                            Password = "+QD80/+XpA98Pqy5b4TtCw==:HBTg67eylv41LO9zqnB8gpUzrqOluNQ7L3GvmFof7+s=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 501, DateTimeKind.Local).AddTicks(5746)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 576, DateTimeKind.Local).AddTicks(1090),
                            Email = "user2@email.com",
                            IsDeleted = false,
                            Password = "4TxxwZPPZ/9fQt1FZHVzaQ==:HJ0A5g8Izv3Irr9bgIFyjx7Lo6jpSAcjo39s04cSxlU=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 576, DateTimeKind.Local).AddTicks(1095)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 654, DateTimeKind.Local).AddTicks(227),
                            Email = "user3@email.com",
                            IsDeleted = false,
                            Password = "b34ACUvUVRBVl2QnUYHOXQ==:ZHP3a+9mWLMYe3oFXw+bJVwkoKxKp6F2S7/BGSbtJE4=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 654, DateTimeKind.Local).AddTicks(241)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 732, DateTimeKind.Local).AddTicks(5355),
                            Email = "user4@email.com",
                            IsDeleted = false,
                            Password = "Zo540Prgc8L5QuzMO2OpPw==:R29xr7oFVGsg/vaPcJBTysGXD5Qs2XX/KanrKfT84+I=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 732, DateTimeKind.Local).AddTicks(5370)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 810, DateTimeKind.Local).AddTicks(4723),
                            Email = "user5@email.com",
                            IsDeleted = false,
                            Password = "/yIS48s8G2FtyQvUGnTouQ==:ZzTiWvE59hrKp1oFGHsfZEokxMEEfbsK84Qf82/o3XQ=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 810, DateTimeKind.Local).AddTicks(4748)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 886, DateTimeKind.Local).AddTicks(9151),
                            Email = "user6@email.com",
                            IsDeleted = false,
                            Password = "EdsGrZ6OJJLg4GxOBssXpg==:GkpwZ2zQpcRT8r+W20L3t9mf5PXAS96dWEAzom27JU4=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 886, DateTimeKind.Local).AddTicks(9157)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 964, DateTimeKind.Local).AddTicks(3909),
                            Email = "user7@email.com",
                            IsDeleted = false,
                            Password = "Wlk0WLMbqHgOCaKt8qcz4A==:OFcmzFJomXfzb/uDEK2GWb/vU/2AGrpBfMQnQ+YnEm4=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 23, 964, DateTimeKind.Local).AddTicks(3922)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 40, DateTimeKind.Local).AddTicks(6287),
                            Email = "user8@email.com",
                            IsDeleted = false,
                            Password = "rEdPsRizOM9wUkUFeEuEhA==:dH7EeZgUGPQcIEucfcmImJBP/H5wTo5zkThYj3qbTPA=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 40, DateTimeKind.Local).AddTicks(6292)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 115, DateTimeKind.Local).AddTicks(742),
                            Email = "user9@email.com",
                            IsDeleted = false,
                            Password = "n2vxtz98sE+3q6sf3Btdqw==:/eXBxaqA0O8wROCckm7ymVRlL/CmgdrxU2fETVqA0n4=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 115, DateTimeKind.Local).AddTicks(744)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 189, DateTimeKind.Local).AddTicks(5670),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "9lfFbXiFuBYZRq0De4bBTQ==:9YTuUCh9pXrTkwnCDW+mC8BVkyWVP+lT6kRzy2vtbSU=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 189, DateTimeKind.Local).AddTicks(5671)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 265, DateTimeKind.Local).AddTicks(253),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "vVIsQe+GeEdha7k4bT8CcQ==:/YQKuJ7xljURsRlWlDziU9aLkFNsjUvgBn5+vt5Dt1k=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 265, DateTimeKind.Local).AddTicks(257)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 339, DateTimeKind.Local).AddTicks(4929),
                            Email = "admin1@email.com",
                            IsDeleted = false,
                            Password = "o1OxeRt7AYN/QgEBHyafyg==:8a2rEm2tPyEeNGm4k1ADZNubjBlUkGbFQ5JKmN3+WiU=",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 5, 15, 16, 59, 24, 339, DateTimeKind.Local).AddTicks(4929)
                        });
                });

            modelBuilder.Entity("BookUser", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("IssuedBooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersIssuedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
