// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProject.Entity.Data;

#nullable disable

namespace TestProject.Entity.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250515072241_BookImagesUrlChange")]
    partial class BookImagesUrlChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestProject.Entity.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("BookImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("BookStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Chinua Achebe",
                            BookImageUrl = "https://images.unsplash.com/photo-1543002588-bfa74002ed7e?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 823, DateTimeKind.Local).AddTicks(7551),
                            ISBN = "7624133121",
                            IsDeleted = false,
                            PublishedYear = 1958,
                            Title = "Things Fall Apart",
                            TotalPages = 209,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 823, DateTimeKind.Local).AddTicks(7552)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Hans Christian Andersen",
                            BookImageUrl = "https://images.unsplash.com/photo-1544947950-fa07a98d237f?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            BookStatus = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 823, DateTimeKind.Local).AddTicks(7555),
                            ISBN = "9153676823",
                            IsDeleted = false,
                            PublishedYear = 1836,
                            Title = "Fairy tales",
                            TotalPages = 784,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 823, DateTimeKind.Local).AddTicks(7555)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIssued")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("IssuedBook");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsIssued = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 40, 961, DateTimeKind.Local).AddTicks(4388),
                            Email = "user1@email.com",
                            IsDeleted = false,
                            Password = "mY4cq1krtDoYWHr5/W9Ozg==:cypTNgfQ2ojfIaDyo1D15f5Td/MDgJi7KRxKxqPUT3c=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 40, 961, DateTimeKind.Local).AddTicks(4403)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 36, DateTimeKind.Local).AddTicks(6061),
                            Email = "user2@email.com",
                            IsDeleted = false,
                            Password = "oECAUMH8DrUjt67G/riI3A==:6/NyTlQjsuzDA/j7gTwpsZw2/D9Bqnxxp9tZ6EzX7tQ=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 36, DateTimeKind.Local).AddTicks(6071)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 111, DateTimeKind.Local).AddTicks(6613),
                            Email = "user3@email.com",
                            IsDeleted = false,
                            Password = "n1VKuLhOoclL3Lr8YWl8kQ==:yYgW0Bvoil0WkABldaBTLVXXb9Rd23qhOD7ouiiYj3I=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 111, DateTimeKind.Local).AddTicks(6625)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 187, DateTimeKind.Local).AddTicks(6934),
                            Email = "user4@email.com",
                            IsDeleted = false,
                            Password = "UQoW3T/SYDBtdNzhgYMn1w==:s0DQlbW5PXp9hyKy34yTNIyN0QRbtbTfkM0L6GmH/Q4=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 187, DateTimeKind.Local).AddTicks(6958)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 264, DateTimeKind.Local).AddTicks(1330),
                            Email = "user5@email.com",
                            IsDeleted = false,
                            Password = "80UrdUq7pV8Z1H8cpN5Gcg==:LEt48k8TBVpwwF7cmrxW9TVvS3ijetWimKGtImtX2Aw=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 264, DateTimeKind.Local).AddTicks(1341)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 339, DateTimeKind.Local).AddTicks(7596),
                            Email = "user6@email.com",
                            IsDeleted = false,
                            Password = "+lJw1U4PgFNnN9Z1TRN4Dw==:5Cl+6rhtqmLpPvyUdCWUYoSHp1h9Q8TkhZHMzfLthGI=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 339, DateTimeKind.Local).AddTicks(7607)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 418, DateTimeKind.Local).AddTicks(61),
                            Email = "user7@email.com",
                            IsDeleted = false,
                            Password = "cRDkszhIl8PAdf/1HwhFFQ==:9p0AaOYpwkWrNsfuZCdfvXJYoi/6aXcvIH6YzMhRUTc=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 418, DateTimeKind.Local).AddTicks(83)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 512, DateTimeKind.Local).AddTicks(809),
                            Email = "user8@email.com",
                            IsDeleted = false,
                            Password = "5A2fYUxDPxbZUA+GiYky7w==:wXGm3UQ3Wt3K58PGA6/47EPv0vtakbiHj/ASYlNJ6/A=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 512, DateTimeKind.Local).AddTicks(817)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 594, DateTimeKind.Local).AddTicks(1078),
                            Email = "user9@email.com",
                            IsDeleted = false,
                            Password = "mHt7JFuEnTo46pYo1NZe3g==:05EN9lPqrzxxScueW7syE6qOftRQ5H/eTEKtM35TRYI=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 594, DateTimeKind.Local).AddTicks(1084)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 669, DateTimeKind.Local).AddTicks(3370),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "tdNp7vphsAgqI5TafjPUyw==:Cu+aVVWH1v+2Nkz4LzJIqDzNDHSFfpAxRlxSBeGQqZs=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 669, DateTimeKind.Local).AddTicks(3378)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 745, DateTimeKind.Local).AddTicks(4368),
                            Email = "user10@email.com",
                            IsDeleted = false,
                            Password = "sO2cRhtlsfMLD5dxuraf1w==:HRPZVa7Fxh/G4zc2EQR9Sh/dqKqs7UcnDNe5S9V6msg=",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 745, DateTimeKind.Local).AddTicks(4375)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 823, DateTimeKind.Local).AddTicks(6700),
                            Email = "admin1@email.com",
                            IsDeleted = false,
                            Password = "Bz+gjQS8t2nYv5F4nCupfQ==:Qh2c9q46xHUvJ7P/PPZWaW4zfFJtG9ENb7vN4Tgc4JY=",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 5, 15, 12, 52, 41, 823, DateTimeKind.Local).AddTicks(6708)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.IssuedBook", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Entity.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
